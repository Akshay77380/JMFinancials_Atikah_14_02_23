def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists())
{
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}
def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
// Apply the Performance Monitoring plugin
apply plugin: 'com.google.firebase.firebase-perf'

android {
    compileSdkVersion 33

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "blinktradepro.jmfs"
        minSdkVersion 23
        targetSdkVersion 31
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    signingConfigs {
        release {
            storeFile file('upload-keystore.jks')
            storePassword "intellect1!"
            keyAlias "upload"
            keyPassword "intellect1!"
        }
    }

    buildTypes {
        release {
            ndk {
                abiFilters 'armeabi-v7a','arm64-v8a','x86_64'
            }
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation platform('com.google.firebase:firebase-bom:27.1.0')
    implementation 'com.google.firebase:firebase-analytics:17.2.2'
    implementation 'com.android.support:support-v4:28.0.0'

//    implementation 'com.google.android.gms:play-services-tagmanager:18.0.0'
    // implementation 'com.google.firebase:firebase-inappmessaging-display:17.0.0'
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-perf'
    implementation 'com.google.android.play:core:1.7.2'
    implementation 'com.google.firebase:firebase-messaging'
//    implementation 'com.clevertap.android:clevertap-android-sdk:4.8.0'
    //    implementation 'com.adobe.marketing.mobile:assurance:1.+'
//    implementation 'com.adobe.marketing.mobile:target:1.+'
//    implementation 'com.adobe.marketing.mobile:analytics:1.+'
//    implementation 'com.adobe.marketing.mobile:campaignclassic:1.+'
//    implementation 'com.adobe.marketing.mobile:userprofile:1.+'
//    implementation 'com.adobe.marketing.mobile:sdk-core:1.+'
//    implementation 'com.android.support:multidex:1.0.3'
//    implementation files('libs/App42_ANDROID_SDK_PROD.jar')
    constraints {
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0") {
            because("kotlin-stdlib-jdk7 is now a part of kotlin-stdlib")
        }
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0") {
            because("kotlin-stdlib-jdk8 is now a part of kotlin-stdlib")
        }
    }
}
apply plugin: 'com.google.gms.google-services'
